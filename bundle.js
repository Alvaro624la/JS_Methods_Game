/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./app.js":
/*!****************!*\
  !*** ./app.js ***!
  \****************/
/***/ (() => {

eval("var coleccionNiveles = [{\n  nivel: 1,\n  titulo: 'Calentamiento n¬∫1: Array üê±',\n  descripcion: 'Vamos a empezar calentando con los conceptos m√°s b√°sicos. Empecemos por a√±adir valores a √©ste array:',\n  problema: \"let mascotas = ['perro'];\",\n  planteamiento: 'A√±ade, al principio del array, el nuevo \"gato\" que voy a adoptar para hacer compa√±ia a mi perro.',\n  respuesta: \"mascotas.unshift('gato');\",\n  solucion: \"let mascotas = ['gato', 'perro'];\",\n  comprobacion: \"mascotas[0].includes('gato')\"\n}, {\n  nivel: 2,\n  titulo: 'Calentamiento n¬∫2: Array üê≠',\n  descripcion: 'Continuamos calentando. Ahora me ha entrado un rat√≥n en casa... ¬°est√° entre mis mascotas!',\n  problema: \"let mascotas = ['gato', 'raton', 'perro'];\",\n  planteamiento: 'Modifica el array eliminando el \"raton\" de entre mis queridas mascotas.',\n  respuesta: \"mascotas.splice(1, 1);\",\n  solucion: \"let mascotas = ['gato', 'perro'];\"\n}, {\n  nivel: 3,\n  titulo: 'Calentamiento n¬∫3: Array üê∂',\n  descripcion: 'Me encantan los animales, por ello, he decidido presentarme voluntaria y pasear a todos √©stos perros. Ayudame a contarlos r√°pidamente para poder apuntarlo en el registro de la perrera.',\n  problema: \"let perros = ['Luby', 'Luna', 'Toby', 'Leo', 'Coco', 'Harry', 'Nelson', 'July', 'Gabe', 'Darleen']; <br>let cantidad = <em>null</em>;\",\n  planteamiento: '¬øCu√°l √©s el n√∫mero exacto de perros que tengo que pasear hoy? Asigna el valor resultante a la variable <code>cantidad</code>.',\n  respuesta: \"cantidad = perros.length;\",\n  solucion: \"let cantidad = 10;\"\n}, {\n  nivel: 4,\n  titulo: 'Nivel 1: Junior Front-End ü§û',\n  descripcion: 'Invertir cadena',\n  problema: \"let cadena = 'pato donald'; <br>let invertida = <em>undefined</em>;\",\n  planteamiento: 'Invierte los caracteres de la variable cadena, y asigalos a la variable <code>invertida</code>.',\n  respuesta: \"invertida = cadena.split('').reverse().join('');\",\n  solucion: \"let invertida = 'dlanod otap'\"\n}, {\n  nivel: 5,\n  titulo: 'Nivel 2: Junior Front-End üî¢',\n  descripcion: 'He recibido √©sta colecci√≥n de datos:',\n  problema: \"let datos = [4, 10, 5, 696, 32, 369, 1000, 12, 5, 1, 2, 4, 21, 22]; <br>let ordenar = <em>undefined</em>;\",\n  planteamiento: 'Ordena de forma ascendente √©stos datos y asigna el resultado a la variable <code>ordenar</code>.',\n  respuesta: \"ordenar = datos.sort((a, b)=> a - b);\",\n  solucion: \"let ordenar = [1, 2, 4, 4, 5, 5, 10, 12, 21, 22, 32, 369, 696, 1000];\"\n}, {\n  nivel: 6,\n  titulo: 'Nivel 3: Junior Front-End üïµÔ∏è‚Äç‚ôÄÔ∏è',\n  descripcion: 'Quiero saber el n√∫mero total, de todas las \"s\" que hay en √©ste trabalenguas:',\n  problema: \"let trabalenguas = 'Si tu gusto gustara del gusto que gusta mi gusto, mi gusto gustar√≠a del gusto que gusta tu gusto'; <br>let repet = <em>null</em>;\",\n  planteamiento: '¬øCu√°l es el n√∫mero de veces que se repite la letra \"s\" en el trabalenguas?. Asignalo el resultado a la variable <code>repet</code>.',\n  respuesta: \"repet = trabalenguas.match(/s/gi).length;\",\n  solucion: \"let repet = '11'\"\n}, {\n  nivel: 7,\n  titulo: 'Nivel 5: Junior Front-End üßÆ',\n  descripcion: '',\n  problema: \"let cadena = 'El n√∫mero pi 3,14 es muy largo. 3,141592653589793 y m√°s. En binario es 11,001001 y m√°s.'; <br>let cantidad = <em>null</em>;\",\n  planteamiento: '¬øCu√°l es la cantidad de n√∫meros que contiene esta cadena?. Asigna el valor a la variable <code>cantidad</code>.',\n  respuesta: \"cantidad = cadena.match(/[0-9]/g).length;\",\n  solucion: \"let cantidad = 27;\"\n}, {\n  nivel: 8,\n  titulo: 'Nivel 4: Junior Front-End #Ô∏è‚É£',\n  descripcion: 'Teniendo esta frase:',\n  problema: \"let frase = ' Bueno,  parece   algo   ,  facil'; <br>let palabras = <em>undefined</em>;\",\n  planteamiento: '¬øCu√°l es la cantidad de palabras contiene esta frase?. Asigna el valor a la variable <code>palabras</code>.',\n  respuesta: \"\",\n  solucion: \"\"\n}, {\n  nivel: 9,\n  titulo: 'Finished!üéâ',\n  descripcion: \"Congratulations, you've finished the JS Methods Game.\",\n  problema: \"üòÅlet JsMethodsGame = true;üòÅ\",\n  planteamiento: 'See more of me here: <code>https://github.com/Alvaro624la</code>',\n  respuesta: \"\",\n  solucion: \"\"\n}, {\n  nivel: 10,\n  titulo: 'Nivel 7: Junior Front-End',\n  descripcion: 'Distancia de Hamming',\n  problema: \"\",\n  planteamiento: '',\n  respuesta: \"\",\n  solucion: \"\"\n}, {\n  nivel: 11,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: '',\n  respuesta: \"\",\n  solucion: \"\"\n}, {\n  nivel: 666,\n  titulo: '',\n  descripcion: 'Hoy tengo comida familiar. Quiero poner el nombre de los invitados en las sillas, pero tengo poco espacio para escribir a mi sobrino',\n  problema: \"let sobrino = 'Alejandro Daniel Ramirez'\",\n  planteamiento: '¬øCu√°ntas palabras/car√°cteres contiene exactamente el nombre de \"Alejandro\"? Asigna el valor resultante a la variable \"palabras\"'\n}]; //COMPROBACIONES (cambiar de documento al terminar comprobaciones (visible para el cliente))\n//NIVEL 1\n// var mascotas = ['perro']; \n// mascotas.unshift('gato');\n// console.log(mascotas);\n// //comprobar\n// console.log(mascotas[0].includes('gato'));\n//NIVEL 2\n// var mascotas = ['gato', 'raton', 'perro'];\n// mascotas.splice(1, 1);\n// console.log(mascotas);\n// let car;\n// console.log(car);\n//NIVEL 3\n// let perros = ['Luby', 'Luna', 'Toby', 'Leo', 'Gin', 'Coco', 'Harry', 'Nelson', 'July', 'Gabe', 'Darleen'];\n// let cantidad = null;\n// cantidad = perros.length;\n// console.log(cantidad);\n//NIVEL 4\n// let cadena = 'pato donald';\n// let invertida = undefined;\n// invertida = cadena.split('').reverse().join('');\n// console.log(invertida);\n//NIVEL 5\n// let datos = [4, 10, 5, 696, 32, 369, 1000, 12, 5, 1, 2, 4, 21, 22];\n// let ordenar = undefined;\n// ordenar = datos.sort((a, b)=> a - b);\n// console.log(ordenar);\n//NIVEL 6\n// let trabalenguas = 'Si tu gusto gustara del gusto que gusta mi gusto, mi gusto gustar√≠a del gusto que gusta tu gusto';\n// let repet = null;\n// repet = trabalenguas.match(/s/gi).length;\n// console.log(repet);\n//NIVEL 7\n// let cadena = 'El n√∫mero pi 3,14 es muy largo. 3,141592653589793 y m√°s. En binario es 11,001001 y m√°s.';\n// let cantidad;\n// cantidad = cadena.match(/[0-9]/g).length;\n// console.log(cantidad);\n//NIVEL 8\n//NIVEL x\n// let sobrino = 'Alejandro Daniel Ramirez';\n// let palabras = null;\n// //contar palabras caracteres string javascript:\n// // Quitar los espacios en blanco y pasar el string a min√∫sculas(si es necesario)\n// // Recorrer la cadena de texto en vez de pasarlo a un array.\n// // Finalmente guardar el resultado en un object, donde la letra es la key y su total.\n// console.log(palabras);\n// JUEGO\n// VARIABLES (global)\n\nvar main = document.getElementById('main');\nvar acc = 1;\nvar nivelProblema = \"\";\nvar nivelRespuesta = \"\";\nvar nivelSolucion = \"\"; //MODAL\n\nvar body = document.getElementById('body');\nvar modal;\nvar content;\nvar modalBtn; //CREACI√ìN NODOS\n//NIVELES\n\nvar nuevoNivel = function nuevoNivel() {\n  main.innerHTML = \"\";\n  coleccionNiveles.forEach(function (nivel) {\n    if (nivel.nivel === acc) {\n      nivelProblema = nivel.problema;\n      nivelRespuesta = nivel.respuesta;\n      nivelSolucion = nivel.solucion; // VARIABLES - TAG NAMEs\n\n      var mainContainer = document.createElement('article');\n      var startOver = document.createElement('button');\n      var titulo = document.createElement('section');\n      var probContainer = document.createElement('section');\n      var contenidoProb = document.createElement('div');\n      var probDesc = document.createElement('span');\n      var probCode = document.createElement('span');\n      var probPreg = document.createElement('span');\n      var solucionFlex = document.createElement('section');\n      var solucionContenido1 = document.createElement('div');\n      var solucionContenido2 = document.createElement('div'); // APPENDCHILDs    \n\n      main.appendChild(mainContainer);\n      mainContainer.appendChild(startOver);\n      mainContainer.appendChild(titulo);\n      mainContainer.appendChild(probContainer);\n      probContainer.appendChild(contenidoProb);\n      contenidoProb.appendChild(probDesc);\n      contenidoProb.appendChild(probCode);\n      contenidoProb.appendChild(probPreg);\n      mainContainer.appendChild(solucionFlex);\n      solucionFlex.appendChild(solucionContenido1);\n      solucionFlex.appendChild(solucionContenido2); // A√ëADIR CLASES\n\n      mainContainer.classList.add('main__container');\n      startOver.classList.add('main__container__start-over-btn');\n      titulo.classList.add('main__container__titulo');\n      probContainer.classList.add('main__container__problema-cont');\n      contenidoProb.classList.add('main__container__problema-cont__contenido');\n      probDesc.classList.add('main__container__problema-cont__contenido__span1');\n      probCode.classList.add('main__container__problema-cont__contenido__span2');\n      probPreg.classList.add('main__container__problema-cont__contenido__span3');\n      solucionFlex.classList.add('main__container__solucion-flex');\n      solucionContenido1.classList.add('main__container__solucion-flex__contenido');\n      solucionContenido2.classList.add('main__container__solucion-flex__contenido'); // INNER HTML\n\n      startOver.id = 'clearLocalStorageBtn';\n      titulo.innerHTML = nivel.titulo;\n      probDesc.innerHTML = nivel.descripcion;\n      probCode.innerHTML = nivel.problema;\n      probPreg.innerHTML = nivel.planteamiento;\n      solucionContenido1.innerHTML = \"<textarea id=\\\"solText\\\" class=\\\"main__container__solucion-flex__contenido__textarea\\\" type=\\\"text\\\" spellcheck=\\\"false\\\" autocomplete=\\\"off\\\" placeholder=\\\"Introduce tu respuesta\\\"></textarea>\";\n      solucionContenido2.innerHTML = \"<button id=\\\"solBtn\\\" class=\\\"main__container__solucion-flex__contenido__btn\\\">Comprobar</button>\"; //MODAL\n\n      modal = document.createElement('div');\n      body.appendChild(modal);\n      modal.classList.add('body__modal'); //CONTENT\n\n      content = document.createElement('p');\n      modal.appendChild(content);\n      content.classList.add('body__modal__content'); //CLOSE BTN\n\n      modalBtn = document.createElement('div');\n      modal.appendChild(modalBtn);\n      modalBtn.classList.add('body__modal__close-btn'); //GAME FINISHED/PASSED\n\n      if (acc === 9) {\n        solucionContenido1.innerHTML = \"\";\n        solucionContenido2.innerHTML = \"\"; //clear local storage btn\n\n        var clearBtn = document.getElementById('clearLocalStorageBtn');\n        clearBtn.addEventListener('click', function () {\n          localStorage.removeItem('contador');\n          acc = 1;\n          nuevoNivel();\n        });\n      }\n\n      ;\n    }\n\n    ;\n  }); //COMPROBACI√ìN RESULTADO\n  //VARIABLES (global)\n\n  try {\n    var respuesta = document.getElementById('solText');\n    var comprobarBtn = document.getElementById('solBtn'); //FUNCIONES\n\n    comprobarBtn.addEventListener('click', function () {\n      if (respuesta.value == nivelRespuesta) {\n        var returnColor = function returnColor() {\n          respuesta.style.backgroundColor = '#fff';\n        };\n\n        //MODAL\n        modal.classList.add('body__modal--active');\n        content.innerHTML = \"\\xA1Correcto! El resultado es \\u2794 \".concat(nivelSolucion);\n        modalBtn.classList.add('body__modal__close-btn--active');\n        main.style.filter = 'blur(2px)';\n        modalBtn.addEventListener('click', function () {\n          modal.classList.remove('body__modal--active');\n          modalBtn.classList.remove('body__modal__close-btn--active');\n          main.style.filter = ''; //NUEVO NIVEL\n\n          nuevoNivel();\n        }); //TEXTAREA\n\n        respuesta.style.backgroundColor = 'rgba(0, 255, 0, .6)';\n        setTimeout(returnColor, 800);\n        ; //CONTADOR\n\n        acc++; //local storage CONTADOR\n\n        localStorage.setItem('contador', JSON.stringify(acc));\n      } else {\n        var _returnColor = function _returnColor() {\n          respuesta.style.backgroundColor = '#fff';\n        };\n\n        //MODAL\n        modal.classList.add('body__modal--active');\n        modal.style.boxShadow = 'rgba(255, 0, 0, 0.3) 0px 0px 0px 4px';\n        content.innerHTML = \"Incorrecto (recuerda usar comillas simples \\\" \\u2019 \\\" y escribir \\\" ; \\\" al final)\";\n        modalBtn.classList.add('body__modal__close-btn--active');\n        main.style.filter = 'blur(2px)';\n        modalBtn.addEventListener('click', function () {\n          modal.classList.remove('body__modal--active');\n          modal.style.boxShadow = 'rgba(3, 52, 214, 0.3) 0px 0px 0px 4px';\n          modalBtn.classList.remove('body__modal__close-btn--active');\n          main.style.filter = '';\n        }); //TEXTAREA\n\n        respuesta.style.backgroundColor = 'rgba(255, 0, 0, .6)';\n        setTimeout(_returnColor, 800);\n        ;\n      }\n    }); //clear local storage\n\n    var clearBtn = document.getElementById('clearLocalStorageBtn');\n    clearBtn.addEventListener('click', function () {\n      localStorage.removeItem('contador');\n      acc = 1;\n      nuevoNivel();\n    });\n  } catch (error) {\n    //aprovecho el error de no detectar las variables let respuesta y let comprobarBtn para dar un mensaje y eliminar el error con catch.\n    console.log('You passed the game!');\n  }\n};\n\nnuevoNivel(); //local storage\n\nwindow.onload = function () {\n  if (localStorage.getItem('contador')) {\n    acc = JSON.parse(localStorage.getItem('contador'));\n    nuevoNivel();\n  }\n\n  ;\n};\n\n//# sourceURL=webpack:///./app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./app.js"]();
/******/ 	
/******/ })()
;
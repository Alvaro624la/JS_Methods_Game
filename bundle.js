/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./app.js":
/*!****************!*\
  !*** ./app.js ***!
  \****************/
/***/ (() => {

eval("//https://codepen.io/alvaro624la/pen/qBXXVmx\nvar coleccionNiveles = [{\n  nivel: 1,\n  titulo: 'Calentamiento nº1: Array',\n  descripcion: 'Vamos a empezar calentando con los conceptos más básicos. Empecemos por añadir valores a éste array:',\n  problema: \"let mascotas = ['perro'];\",\n  planteamiento: 'Añade, al principio del array, el nuevo \"gato\" que voy a adoptar para hacer compañia a mi perro.',\n  respuesta: \"mascotas.unshift('gato');\",\n  solucion: \"let mascotas = ['gato', 'perro'];\"\n}, {\n  nivel: 2,\n  titulo: 'Calentamiento nº2: Array',\n  descripcion: 'Continuamos calentando. Ahora me ha entrado un ratón en casa... ¡está entre mis mascotas!',\n  problema: \"let mascotas = ['gato', 'raton', 'perro'];\",\n  planteamiento: 'Modifica el array eliminando el \"raton\" de entre mis queridas mascotas.',\n  respuesta: \"mascotas.splice(1, 1);\",\n  solucion: \"let mascotas = ['gato', 'perro'];\"\n}, {\n  nivel: 3,\n  titulo: 'Calentamiento nº3: Array',\n  descripcion: 'Me encantan los animales, por ello, he decidido presentarme voluntaria y pasear a todos éstos perros. Ayudame a contarlos rápidamente para poder apuntarlo en el registro de la perrera.',\n  problema: \"let perros = ['Luby', 'Luna', 'Toby', 'Leo', 'Gin', 'Coco', 'Harry', 'Nelson', 'July', 'Gabe', 'Darleen']; <br>let cantidad = <em>null</em>;\",\n  planteamiento: '¿Cuál és el número exacto de perros que tengo que pasear hoy? Asigna el valor resultante a la variable <code>cantidad</code>.',\n  respuesta: \"cantidad = perros.length;\",\n  solucion: \"let cantidad = 11;\"\n}, {\n  nivel: 4,\n  titulo: 'Nivel: Junior Front-End',\n  descripcion: 'Invertir cadena',\n  problema: \"let cadena = 'pato'; <br>let invertida = <em>undefined</em>;\",\n  planteamiento: 'Invierte los caracteres de la variable cadena, y asigalos a la variable <code>invertida</code>.'\n}, {\n  nivel: 5,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 6,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 7,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 8,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 9,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 10,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 666,\n  titulo: '',\n  descripcion: 'Hoy tengo comida familiar. Quiero poner el nombre de los invitados en las sillas, pero tengo poco espacio para escribir a mi sobrino',\n  problema: \"let sobrino = 'Alejandro Daniel Ramirez'\",\n  planteamiento: '¿Cuántas palabras/carácteres contiene exactamente el nombre de \"Alejandro\"? Asigna el valor resultante a la variable \"palabras\"'\n}]; //COMPROBACIONES (cambiar de documento al terminar comprobaciones (visible para el cliente))\n//NIVEL 1\n// var mascotas = ['perro']; \n// mascotas.unshift('gato'); \n// console.log(mascotas);\n//NIVEL 2\n// var mascotas = ['gato', 'raton', 'perro'];\n// mascotas.splice(1, 1)\n// console.log(mascotas);\n// let car;\n// console.log(car);\n//NIVEL 3\n// let perros = ['Luby', 'Luna', 'Toby', 'Leo', 'Gin', 'Coco', 'Harry', 'Nelson', 'July', 'Gabe', 'Darleen'];\n// let cantidad = null;\n// cantidad = perros.length;\n// console.log(cantidad);\n//NIVEL 4\n\nvar cadena = 'pato';\nvar invertida;\nconsole.log(cadena.split(\"\").reverse().join(\"\")); //NIVEL x\n// let sobrino = 'Alejandro Daniel Ramirez';\n// let palabras = null;\n// //contar palabras caracteres string javascript:\n// // Quitar los espacios en blanco y pasar el string a minúsculas(si es necesario)\n// // Recorrer la cadena de texto en vez de pasarlo a un array.\n// // Finalmente guardar el resultado en un object, donde la letra es la key y su total.\n// console.log(palabras);\n// JUEGO\n// VARIABLES (global)\n\nvar main = document.getElementById('main');\nvar acc = 1;\nvar nivelProblema = \"\";\nvar nivelRespuesta = \"\";\nvar nivelSolucion = \"\"; // CREACIÓN NODOS\n\nvar nuevoNivel = function nuevoNivel() {\n  main.innerHTML = \"\";\n  coleccionNiveles.forEach(function (nivel) {\n    if (nivel.nivel === acc) {\n      nivelProblema = nivel.problema;\n      nivelRespuesta = nivel.respuesta;\n      nivelSolucion = nivel.solucion; // VARIABLES - TAG NAMEs\n\n      var mainContainer = document.createElement('article');\n      var titulo = document.createElement('section');\n      var probContainer = document.createElement('section');\n      var contenidoProb = document.createElement('div');\n      var probDesc = document.createElement('span');\n      var probCode = document.createElement('span');\n      var probPreg = document.createElement('span');\n      var solucionFlex = document.createElement('section');\n      var solucionContenido1 = document.createElement('div');\n      var solucionContenido2 = document.createElement('div'); // APPENDCHILDs    \n\n      main.appendChild(mainContainer);\n      mainContainer.appendChild(titulo);\n      mainContainer.appendChild(probContainer);\n      probContainer.appendChild(contenidoProb);\n      contenidoProb.appendChild(probDesc);\n      contenidoProb.appendChild(probCode);\n      contenidoProb.appendChild(probPreg);\n      mainContainer.appendChild(solucionFlex);\n      solucionFlex.appendChild(solucionContenido1);\n      solucionFlex.appendChild(solucionContenido2); // AÑADIR CLASES\n\n      mainContainer.classList.add('main__container');\n      titulo.classList.add('main__container__titulo');\n      probContainer.classList.add('main__container__problema-cont');\n      contenidoProb.classList.add('main__container__problema-cont__contenido');\n      probDesc.classList.add('main__container__problema-cont__contenido__span1');\n      probCode.classList.add('main__container__problema-cont__contenido__span2');\n      probPreg.classList.add('main__container__problema-cont__contenido__span3');\n      solucionFlex.classList.add('main__container__solucion-flex');\n      solucionContenido1.classList.add('main__container__solucion-flex__contenido');\n      solucionContenido2.classList.add('main__container__solucion-flex__contenido'); // INNER HTML\n\n      titulo.innerHTML = nivel.titulo;\n      probDesc.innerHTML = nivel.descripcion;\n      probCode.innerHTML = nivel.problema;\n      probPreg.innerHTML = nivel.planteamiento;\n      solucionContenido1.innerHTML = \"<textarea id=\\\"solText\\\" class=\\\"main__container__solucion-flex__contenido__textarea\\\" type=\\\"text\\\" spellcheck=\\\"false\\\" autocomplete=\\\"off\\\" placeholder=\\\"Introduce tu respuesta\\\"></textarea>\";\n      solucionContenido2.innerHTML = \"<button id=\\\"solBtn\\\" class=\\\"main__container__solucion-flex__contenido__btn\\\">Comprobar</button>\";\n    }\n\n    ;\n  }); ///////////////////////////////////////////////////////////////\n  //COMPROBACIÓN RESULTADO\n  //VARIABLES (global)\n\n  var respuesta = document.getElementById('solText');\n  var comprobarBtn = document.getElementById('solBtn'); //FUNCIONES\n\n  comprobarBtn.addEventListener('click', function () {\n    if (respuesta.value == nivelRespuesta) {\n      console.log('bien');\n      acc++;\n      alert(nivelSolucion);\n      /*\r\n      //CONSOLA AUTOMATICA\r\n      let nombreVar = nivelProblema.split(\" \")[1];\r\n      console.log(nombreVar);\r\n      // console.log(Object.keys({nivelProblema})[0]);\r\n      let problema = nivelProblema.split('=');\r\n      console.log(problema);\r\n      let respuesta = nivelRespuesta.split('.');\r\n      console.log(respuesta);\r\n      let añadirPunto = `.${respuesta[1]}`;\r\n      console.log(añadirPunto);\r\n      let juntar = problema[1]+añadirPunto;\r\n      console.log(juntar);\r\n      */\n      // alert(`¡Correcto!. El resultado del problema ${nivelProblema} y tu respuesta ${respuesta.value} da `);\n\n      nuevoNivel();\n    } else {\n      alert('Incorrecto (recuerda usar comillas simples \" ’ \" y escribir \" ; \" al final)');\n      console.warn('Incorrecto (recuerda usar comillas simples \"’\" y escribir \";\" al final)');\n    }\n  }); ///////////////////////////////////////////////////////////////\n};\n\nnuevoNivel();\n/*\r\n//CONSOLA AUTOMATICA\r\nlet nombreVar = nivelProblema.split(\" \")[1];\r\nconsole.log(`nombreVar (split \" \") --> ${nombreVar}`);\r\n// console.log(Object.keys({nivelProblema})[0]);\r\nlet problema = nivelProblema.split('=');\r\nconsole.log(`problema (split =) --> ${problema}`);\r\nlet respuesta = nivelRespuesta.split('.');\r\nconsole.log(`respuesta (split .) --> ${respuesta}`);\r\nlet añadirPunto = `.${respuesta[1]}`;\r\nconsole.log(`añadirPunto . y respuesta[1] --> ${añadirPunto}`);\r\nlet juntar = problema[1]+añadirPunto;\r\nconsole.log(`juntar todo --> ${juntar}`);\r\nconsole.log('falta operar esta string, pero evaluar solo sirve para darme un numero:');\r\nconsole.log(eval(new String(juntar)));\r\nconsole.log(eval(juntar));\r\n*/\n\n//# sourceURL=webpack:///./app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./app.js"]();
/******/ 	
/******/ })()
;
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./app.js":
/*!****************!*\
  !*** ./app.js ***!
  \****************/
/***/ (() => {

eval("//https://codepen.io/alvaro624la/pen/qBXXVmx\nvar coleccionNiveles = [{\n  nivel: 1,\n  titulo: 'Calentamiento nº1: Array',\n  descripcion: 'Vamos a empezar calentando con los conceptos más básicos. Empecemos por añadir valores a éste array:',\n  problema: \"let mascotas = ['perro']\",\n  planteamiento: 'Añade, al principio del array, el nuevo \"gato\" que voy a adoptar para hacer compañia a mi perro.',\n  respuesta: \"mascotas.unshift('gato');\"\n}, {\n  nivel: 2,\n  titulo: 'Calentamiento nº2: Array',\n  descripcion: 'Continuamos calentando. Ahora me ha entrado un ratón en casa... ¡está entre mis mascotas!',\n  problema: \"let mascotas = ['gato', 'raton', 'perro'];\",\n  planteamiento: 'Modifica el array eliminando el \"raton\" de entre mis queridas mascotas.',\n  respuesta: \"mascotas.splice(1, 1);\"\n}, {\n  nivel: 3,\n  titulo: 'Calentamiento nº3: Array',\n  descripcion: 'Me encantan los animales, por ello, he decidido presentarme voluntaria y pasear a todos éstos perros. Ayudame a contarlos rápidamente para poder apuntarlo en el registro de la perrera.',\n  problema: \"let perros = ['Luby', 'Luna', 'Toby', 'Leo', 'Gin', 'Coco', 'Harry', 'Nelson', 'July', 'Gabe', 'Darleen']; let cantidad = null;\",\n  planteamiento: '¿Cuál és el número exacto de perros que tengo que pasear hoy? Asigna el valor resultante a la variable cantidad.',\n  respuesta: \"cantidad = perros.length;\"\n}, {\n  nivel: 4,\n  titulo: 'Calentamiento nº4: Array',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 5,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 6,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 7,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 8,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 9,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 10,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 12,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 12,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 13,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 14,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 15,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 16,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 17,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 18,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 19,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 20,\n  titulo: '',\n  descripcion: '',\n  problema: \"\",\n  planteamiento: ''\n}, {\n  nivel: 21,\n  titulo: '',\n  descripcion: 'Hoy tengo comida familiar. Quiero poner el nombre de los invitados en las sillas, pero tengo poco espacio para escribir a mi sobrino',\n  problema: \"let sobrino = 'Alejandro Daniel Ramirez'\",\n  planteamiento: '¿Cuántas palabras/carácteres contiene exactamente el nombre de \"Alejandro\"? Asigna el valor resultante a la variable \"palabras\"'\n}]; //COMPROBACIONES (cambiar de documento al terminar comprobaciones (visible para el cliente))\n//NIVEL 1\n// var mascotas = ['perro']; \n// mascotas.unshift('gato'); \n// console.log(mascotas);\n//NIVEL 2\n// var mascotas = ['gato', 'raton', 'perro'];\n// mascotas.splice(1, 1)\n// console.log(mascotas);\n//NIVEL 3\n// let perros = ['Luby', 'Luna', 'Toby', 'Leo', 'Gin', 'Coco', 'Harry', 'Nelson', 'July', 'Gabe', 'Darleen'];\n// let cantidad = null;\n// cantidad = perros.length;\n// console.log(cantidad);\n//NIVEL x\n// let sobrino = 'Alejandro Daniel Ramirez';\n// let palabras = null;\n// //contar palabras caracteres string javascript:\n// // Quitar los espacios en blanco y pasar el string a minúsculas(si es necesario)\n// // Recorrer la cadena de texto en vez de pasarlo a un array.\n// // Finalmente guardar el resultado en un object, donde la letra es la key y su total.\n// console.log(palabras);\n// JUEGO\n// VARIABLES (global)\n\nvar main = document.getElementById('main');\nvar acc = 1;\nvar nivelProblema = \"\";\nvar nivelSolucion = \"\";\nvar nivelRespuesta = \"\"; // CREACIÓN NODOS\n\nvar nuevoNivel = function nuevoNivel() {\n  main.innerHTML = \"\";\n  coleccionNiveles.forEach(function (nivel) {\n    if (nivel.nivel === acc) {\n      nivelProblema = nivel.problema;\n      nivelRespuesta = nivel.respuesta; // VARIABLES - TAG NAMEs\n\n      var mainContainer = document.createElement('article');\n      var titulo = document.createElement('section');\n      var probContainer = document.createElement('section');\n      var contenidoProb = document.createElement('div');\n      var probDesc = document.createElement('span');\n      var probCode = document.createElement('span');\n      var probPreg = document.createElement('span');\n      var solucionFlex = document.createElement('section');\n      var solucionContenido1 = document.createElement('div');\n      var solucionContenido2 = document.createElement('div'); // APPENDCHILDs    \n\n      main.appendChild(mainContainer);\n      mainContainer.appendChild(titulo);\n      mainContainer.appendChild(probContainer);\n      probContainer.appendChild(contenidoProb);\n      contenidoProb.appendChild(probDesc);\n      contenidoProb.appendChild(probCode);\n      contenidoProb.appendChild(probPreg);\n      mainContainer.appendChild(solucionFlex);\n      solucionFlex.appendChild(solucionContenido1);\n      solucionFlex.appendChild(solucionContenido2); // AÑADIR CLASES\n\n      mainContainer.classList.add('main__container');\n      titulo.classList.add('main__container__titulo');\n      probContainer.classList.add('main__container__problema-cont');\n      contenidoProb.classList.add('main__container__problema-cont__contenido');\n      probDesc.classList.add('main__container__problema-cont__contenido__span1');\n      probCode.classList.add('main__container__problema-cont__contenido__span2');\n      probPreg.classList.add('main__container__problema-cont__contenido__span3');\n      solucionFlex.classList.add('main__container__solucion-flex');\n      solucionContenido1.classList.add('main__container__solucion-flex__contenido');\n      solucionContenido2.classList.add('main__container__solucion-flex__contenido'); // INNER HTML\n\n      titulo.innerHTML = nivel.titulo;\n      probDesc.innerHTML = nivel.descripcion;\n      probCode.innerHTML = nivel.problema;\n      probPreg.innerHTML = nivel.planteamiento;\n      solucionContenido1.innerHTML = \"<textarea id=\\\"solText\\\" class=\\\"main__container__solucion-flex__contenido__textarea\\\" type=\\\"text\\\" spellcheck=\\\"false\\\" autocomplete=\\\"off\\\" placeholder=\\\"Introduce tu respuesta\\\">;</textarea>\";\n      solucionContenido2.innerHTML = \"<button id=\\\"solBtn\\\" class=\\\"main__container__solucion-flex__contenido__btn\\\">Comprobar</button>\";\n    }\n\n    ;\n  }); //CONSOLA\n\n  var _editor,\n      _statusbar,\n      _console,\n      _history = [\"\"],\n      _historyIndex = 0,\n      _consoleEditor;\n\n  window.addEventListener(\"load\", function () {\n    _statusbar = document.getElementById(\"status\");\n    _console = document.getElementById(\"console\");\n    _editor = ace.edit(\"editor\");\n    _consoleEditor = ace.edit(\"consoleInput\");\n\n    _editor.setOptions({\n      theme: 'ace/theme/ayu-dark',\n      wrap: true,\n      behavioursEnabled: false,\n      showInvisibles: false,\n      enableSnippets: true,\n      displayIndentGuides: true,\n      enableLiveAutocompletion: true,\n      enableBasicAutocompletion: true,\n      enableEmmet: true,\n      fontSize: \"20px\",\n      scrollPastEnd: true,\n      useWorker: true,\n      printMargin: false,\n      tabSize: 4,\n      fontFamily: \"Inconsolata\",\n      mode: \"ace/mode/javascript\"\n    });\n\n    _consoleEditor.setOptions({\n      theme: 'ace/theme/ayu-dark',\n      wrap: true,\n      highlightActiveLine: false,\n      showInvisibles: false,\n      enableSnippets: false,\n      displayIndentGuides: true,\n      enableLiveAutocompletion: false,\n      enableBasicAutocompletion: false,\n      enableEmmet: false,\n      fontSize: \"1em\",\n      printMargin: false,\n      tabSize: 4,\n      minLines: 1,\n      maxLines: 100,\n      hScrollBarAlwaysVisible: false,\n      vScrollBarAlwaysVisible: false,\n      showGutter: false,\n      fontFamily: \"Inconsolata\",\n      mode: \"ace/mode/javascript\"\n    });\n\n    _editor.getSelection().on(\"changeCursor\", function (e, selection) {\n      _statusbar.innerHTML = \"Line \" + (selection.lead.row + 1) + \", Column \" + selection.lead.column;\n    });\n\n    _consoleEditor.on(\"change\", function (e) {\n      var newHeight = _consoleEditor.getSession().getScreenLength() * _consoleEditor.renderer.lineHeight + _consoleEditor.renderer.scrollBar.getWidth();\n\n      _consoleEditor.container.style.height = newHeight + \"px\";\n\n      _consoleEditor.resize();\n    });\n\n    _consoleEditor.commands.addCommand({\n      name: \"History Up\",\n      bindKey: {\n        win: \"Up\",\n        mac: \"Up\"\n      },\n      exec: function exec(e) {\n        if (e.getSelectionRange().start.row === 0) {\n          if (_historyIndex === _history.length - 1) {\n            _history[_historyIndex] = e.getValue().replace(/^\\s*/g, '').replace(/\\s*$/g, '');\n          }\n\n          if (_historyIndex > 0) {\n            e.setValue(_history[--_historyIndex], 1);\n          }\n        } else {\n          e.getSession().getSelection().moveCursorBy(-1, 0);\n        }\n      }\n    });\n\n    _consoleEditor.commands.addCommand({\n      name: \"History Down\",\n      bindKey: {\n        win: \"Down\",\n        mac: \"Down\"\n      },\n      exec: function exec(e) {\n        if (e.getSelectionRange().end.row === e.getSession().getDocument().getLength() - 1) {\n          if (_historyIndex < _history.length - 1) {\n            e.setValue(_history[++_historyIndex], 1);\n          }\n        } else {\n          e.getSession().getSelection().moveCursorBy(1, 0);\n        }\n      }\n    });\n\n    window.addEventListener('mousemove', _mouseMove);\n    window.addEventListener('mouseup', _mouseUp);\n    window.addEventListener('resize', function () {\n      _editor.resize();\n\n      _consoleEditor.resize();\n    });\n\n    _editor.resize();\n\n    _consoleEditor.resize();\n  }); //Actual Cool Part\n\n  function _runJavascript(text) {\n    try {\n      var f = new Function(text);\n      f();\n    } catch (exception) {\n      console.error(exception);\n    }\n  }\n\n  function _clearLog() {\n    _console.firstElementChild.innerHTML = \"\";\n  } //Redefine console functions\n\n\n  console.reallog = console.log;\n\n  console.log = function () {\n    var line = document.createElement('div');\n    line.className = 'consoleLine';\n    var content = [];\n\n    for (var i = 0; i < arguments.length; ++i) {\n      content.push(_consoleParse(arguments[i]));\n    }\n\n    line.innerHTML = content.join(\"<br>\");\n\n    if (line.innerHTML.replace(/\\s/g, '') !== \"\") {\n      _console.firstElementChild.appendChild(line, _console.firstElementChild);\n    }\n  };\n\n  console.realerror = console.error;\n\n  console.error = function () {\n    var line = document.createElement('div');\n    line.className = 'consoleLine error';\n    line.textContent = [].join.call(arguments, \"<br>\");\n\n    _console.firstElementChild.appendChild(line, _console.firstElementChild);\n  };\n\n  function _consoleParse(arg) {\n    if (typeof arg === \"boolean\" || typeof arg === \"undefined\" || arg === null) {\n      return '<span class=\"ace_constant ace_language\">' + arg.toString() + '</span>';\n    } else if (typeof arg === \"string\") {\n      return '<span class=\"ace_string\">\"' + arg + '\"</span>';\n    } else if (typeof arg === \"number\") {\n      return '<span class=\"ace_constant ace_numeric\">' + arg + '</span>';\n    } else if (arg instanceof HTMLElement) {\n      return '<span class=\"ace_string\">\"' + escapeHtml(arg.outerHTML) + '\"</span>';\n    } else if (arg instanceof Array) {\n      var tokens = [];\n      arg.forEach(function (x) {\n        tokens.push(_consoleParse(x));\n      });\n      return \"[\" + tokens.join(\", \") + \"]\";\n    } else if (arg instanceof Object) {\n      var tokens = [];\n      Object.keys(arg).forEach(function (key) {\n        tokens.push(_consoleParse(key) + \": \" + _consoleParse(arg[key]));\n      });\n      return \"{\" + tokens.join(\", \") + \"}\";\n    }\n\n    return arg.toString();\n  }\n\n  function escapeHtml(unsafe) {\n    return unsafe.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n  }\n  /*\r\n  ///////////////////////////////////////////////////////////////\r\n  //COMPROBACIÓN RESULTADO\r\n  //VARIABLES (global)\r\n  let respuesta = document.getElementById('solText');\r\n  let comprobarBtn = document.getElementById('solBtn');\r\n  //FUNCIONES\r\n  comprobarBtn.addEventListener('click', ()=>{\r\n      if(respuesta.value == nivelRespuesta){\r\n          console.log('bien');\r\n          acc++;\r\n          //CONSOLA AUTOMATICA\r\n          let nombreVar = nivelProblema.split(\" \")[1];\r\n          console.log(nombreVar);\r\n          // console.log(Object.keys({nivelProblema})[0]);\r\n          let problema = nivelProblema.split('=');\r\n          console.log(problema);\r\n          let respuesta = nivelRespuesta.split('.');\r\n          console.log(respuesta);\r\n          let añadirPunto = `.${respuesta[1]}`;\r\n          console.log(añadirPunto);\r\n          let juntar = problema[1]+añadirPunto;\r\n          console.log(juntar);\r\n          \r\n  \r\n          // alert(`¡Correcto!. El resultado del problema ${nivelProblema} y tu respuesta ${respuesta.value} da `);\r\n          nuevoNivel();\r\n      } else {\r\n          console.log('Incorrecto, prueba otra vez');\r\n          // mascotas.unshift('gato');\r\n      }\r\n  });\r\n  ///////////////////////////////////////////////////////////////\r\n  */\n\n};\n\nnuevoNivel();\n/*\r\n//CONSOLA AUTOMATICA\r\nlet nombreVar = nivelProblema.split(\" \")[1];\r\nconsole.log(`nombreVar (split \" \") --> ${nombreVar}`);\r\n// console.log(Object.keys({nivelProblema})[0]);\r\nlet problema = nivelProblema.split('=');\r\nconsole.log(`problema (split =) --> ${problema}`);\r\nlet respuesta = nivelRespuesta.split('.');\r\nconsole.log(`respuesta (split .) --> ${respuesta}`);\r\nlet añadirPunto = `.${respuesta[1]}`;\r\nconsole.log(`añadirPunto . y respuesta[1] --> ${añadirPunto}`);\r\nlet juntar = problema[1]+añadirPunto;\r\nconsole.log(`juntar todo --> ${juntar}`);\r\nconsole.log('falta operar esta string, pero evaluar solo sirve para darme un numero:');\r\nconsole.log(eval(new String(juntar)));\r\nconsole.log(eval(juntar));\r\n*/\n\n//# sourceURL=webpack:///./app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./app.js"]();
/******/ 	
/******/ })()
;
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./app.js":
/*!****************!*\
  !*** ./app.js ***!
  \****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modulos_coleccionNiveles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modulos/coleccionNiveles */ \"./modulos/coleccionNiveles.js\");\n // JUEGO\n// VARIABLES (global)\n\nvar randomMode = 'off';\nvar main = document.getElementById('main');\nvar nivelNum = 1;\nvar aciertosAcc = 0;\nvar nivelProblema = \"\";\nvar nivelRespuesta;\nvar nivelSolucion = \"\"; //MODAL\n\nvar body = document.getElementById('body');\nvar focusHere; // let bgModalBehind;\n\nvar modal;\nvar anchorFocus = document.getElementById('anchorFocus');\n; // <a> para focus\n\nvar content;\nvar modalBtn; //CREACIÓN NODOS\n//NIVELES\n\nvar nuevoNivel = function nuevoNivel() {\n  main.innerHTML = \"\";\n  _modulos_coleccionNiveles__WEBPACK_IMPORTED_MODULE_0__.coleccionNiveles.forEach(function (nivel) {\n    //mostrar nivel final\n    if (aciertosAcc === _modulos_coleccionNiveles__WEBPACK_IMPORTED_MODULE_0__.coleccionNiveles.length - 1) {\n      nivelNum = 'Final';\n    }\n\n    ; //mostrar niveles - funcionamiento\n\n    if (nivel.nivel === nivelNum) {\n      nivelProblema = nivel.problema;\n      nivelRespuesta = nivel.respuesta;\n      nivelSolucion = nivel.solucion; // VARIABLES - TAG NAMEs\n\n      var mainContainer = document.createElement('article');\n      var startOver = document.createElement('button');\n      var titulo = document.createElement('section');\n      var probContainer = document.createElement('section');\n      var contenidoProb = document.createElement('div');\n      var probDesc = document.createElement('span');\n      var probCode = document.createElement('span');\n      var probPreg = document.createElement('span');\n      var solucionFlex = document.createElement('section');\n      var solucionContenido1 = document.createElement('div');\n      var solucionContenido2 = document.createElement('div'); // APPENDCHILDs    \n\n      main.appendChild(mainContainer);\n      mainContainer.appendChild(startOver);\n      mainContainer.appendChild(titulo);\n      mainContainer.appendChild(probContainer);\n      probContainer.appendChild(contenidoProb);\n      contenidoProb.appendChild(probDesc);\n      contenidoProb.appendChild(probCode);\n      contenidoProb.appendChild(probPreg);\n      mainContainer.appendChild(solucionFlex);\n      solucionFlex.appendChild(solucionContenido1);\n      solucionFlex.appendChild(solucionContenido2); // AÑADIR CLASES\n\n      mainContainer.classList.add('main__container');\n      startOver.classList.add('main__container__start-over-btn');\n      titulo.classList.add('main__container__titulo');\n      probContainer.classList.add('main__container__problema-cont');\n      contenidoProb.classList.add('main__container__problema-cont__contenido');\n      probDesc.classList.add('main__container__problema-cont__contenido__span1');\n      probCode.classList.add('main__container__problema-cont__contenido__span2');\n      probPreg.classList.add('main__container__problema-cont__contenido__span3');\n      solucionFlex.classList.add('main__container__solucion-flex');\n      solucionContenido1.classList.add('main__container__solucion-flex__contenido');\n      solucionContenido2.classList.add('main__container__solucion-flex__contenido'); // INNER HTML\n\n      startOver.id = 'clearLocalStorageBtn';\n      titulo.innerHTML = nivel.titulo;\n      probDesc.innerHTML = nivel.descripcion;\n      probCode.innerHTML = nivel.problema;\n      probPreg.innerHTML = nivel.planteamiento;\n      solucionContenido1.innerHTML = \"<textarea id=\\\"solText\\\" class=\\\"main__container__solucion-flex__contenido__textarea\\\" type=\\\"text\\\" spellcheck=\\\"false\\\" autocomplete=\\\"off\\\" placeholder=\\\"Introduce tu respuesta\\\"></textarea>\";\n      solucionContenido2.innerHTML = \"<button id=\\\"solBtn\\\" class=\\\"main__container__solucion-flex__contenido__btn\\\">Comprobar</button>\"; //Focus (inhabilitar textarea)\n\n      focusHere = document.createElement('button');\n      body.appendChild(focusHere);\n      focusHere.classList.add('focus-here');\n      focusHere.id = 'focusHere'; //BG-MODAL\n      // bgModalBehind = document.createElement('div');\n      // body.appendChild(bgModalBehind);\n      //MODAL\n\n      modal = document.createElement('div');\n      body.appendChild(modal);\n      modal.classList.add('body__modal'); //CONTENT\n\n      content = document.createElement('p');\n      modal.appendChild(content);\n      content.classList.add('body__modal__content'); //CLOSE BTN\n\n      modalBtn = document.createElement('div');\n      modal.appendChild(modalBtn);\n      modalBtn.classList.add('body__modal__close-btn'); //GAME FINISHED/PASSED\n\n      if (nivelNum === 'Final') {\n        solucionContenido1.innerHTML = \"\";\n        solucionContenido2.innerHTML = \"\"; //clear local storage btn\n\n        var clearBtn = document.getElementById('clearLocalStorageBtn');\n        clearBtn.addEventListener('click', function () {\n          localStorage.removeItem('Nivel');\n          localStorage.removeItem('Aciertos');\n          nivelNum = 1;\n          aciertosAcc = 0;\n          nuevoNivel();\n        });\n      }\n\n      ;\n    }\n\n    ;\n  }); //COMPROBACIÓN RESULTADO\n  //VARIABLES (global)\n\n  try {\n    var respuesta = document.getElementById('solText');\n    var comprobarBtn = document.getElementById('solBtn'); //FUNCIONES\n    //Comprobar:\n\n    var check = function check() {\n      if (respuesta.value === nivelRespuesta.a || respuesta.value === nivelRespuesta.b || respuesta.value === nivelRespuesta.c || respuesta.value === nivelRespuesta.d || respuesta.value === nivelRespuesta.e || respuesta.value === nivelRespuesta.f || respuesta.value === nivelRespuesta.g || respuesta.value === nivelRespuesta.h || respuesta.value === nivelRespuesta.i || respuesta.value === nivelRespuesta.j) {\n        var returnColor = function returnColor() {\n          respuesta.style.backgroundColor = '#fff';\n        };\n\n        //MODAL and NEXT LEVEL\n        modal.classList.add('body__modal--active');\n        content.innerHTML = \"\\xA1Correcto! El resultado es \\u2794 \".concat(nivelSolucion);\n        modalBtn.classList.add('body__modal__close-btn--active');\n        main.style.filter = 'blur(2px)'; // bgModalBehind.classList.add('bg-main-modal-behind');\n\n        focusHere.focus(); //cerrar el modal\n\n        var closeModalBien = function closeModalBien() {\n          modal.classList.remove('body__modal--active');\n          modalBtn.classList.remove('body__modal__close-btn--active');\n          main.style.filter = ''; // bgModalBehind.classList.remove('bg-main-modal-behind');\n          //NUEVO NIVEL\n\n          nuevoNivel();\n        }; //cerrar modal con CLICK\n\n\n        modalBtn.addEventListener('click', function () {\n          closeModalBien();\n          respuesta.focus();\n        }); //cerrar modal con ESC key\n\n        document.addEventListener('keyup', function (e) {\n          if (e.code == 'Escape') {\n            e.preventDefault();\n            closeModalBien();\n            respuesta.focus();\n          }\n\n          ;\n        }); //TEXTAREA\n\n        respuesta.style.backgroundColor = 'rgba(0, 255, 0, .6)';\n        setTimeout(returnColor, 800);\n        ; //CONTADOR\n\n        nivelNum++;\n        aciertosAcc++; //local storage CONTADOR\n\n        localStorage.setItem('Nivel', JSON.stringify(nivelNum));\n        localStorage.setItem('Aciertos', JSON.stringify(aciertosAcc));\n      } else {\n        var _returnColor = function _returnColor() {\n          respuesta.style.backgroundColor = '#fff';\n        };\n\n        //MODAL AND NO PASS LEVEL\n        modal.classList.add('body__modal--active');\n        modal.style.boxShadow = 'rgba(255, 0, 0, 0.3) 0px 0px 0px 4px';\n        content.innerHTML = \"Incorrecto (recuerda utilizar ES6 y/o escribir limpio y legible con espacios correspondientes)\";\n        modalBtn.classList.add('body__modal__close-btn--active');\n        main.style.filter = 'blur(2px)'; // bgModalBehind.classList.add('bg-main-modal-behind');\n\n        focusHere.focus(); //cerrar el modal\n\n        var closeModalMal = function closeModalMal() {\n          modal.classList.remove('body__modal--active');\n          modal.style.boxShadow = 'rgba(3, 52, 214, 0.3) 0px 0px 0px 4px';\n          modalBtn.classList.remove('body__modal__close-btn--active');\n          main.style.filter = ''; // bgModalBehind.classList.remove('bg-main-modal-behind');\n        }; //cerrar modal con CLICK\n\n\n        modalBtn.addEventListener('click', function () {\n          closeModalMal();\n          respuesta.focus();\n        }); //cerrar modal con ESC key\n\n        document.addEventListener('keyup', function (e) {\n          if (e.code == 'Escape') {\n            e.preventDefault();\n            closeModalMal();\n            respuesta.focus();\n          }\n\n          ;\n        }); //TEXTAREA\n\n        respuesta.style.backgroundColor = 'rgba(255, 0, 0, .6)';\n        setTimeout(_returnColor, 800);\n        ;\n      }\n    }; //Comprobar al presionar y soltar tecla ENTER\n\n\n    respuesta.addEventListener('keypress', function (e) {\n      if (e.code == 'Enter' && modal.classList != 'body__modal body__modal--active') {\n        e.preventDefault();\n        check();\n      }\n\n      ;\n    }); //Comprobar con click en btn \"comprobar\"\n\n    comprobarBtn.addEventListener('click', function () {\n      check();\n    }); //clear local storage\n\n    var clearBtn = document.getElementById('clearLocalStorageBtn');\n    clearBtn.addEventListener('click', function () {\n      localStorage.removeItem('Nivel');\n      localStorage.removeItem('Aciertos');\n      nivelNum = 1;\n      aciertosAcc = 0;\n      nuevoNivel();\n    });\n  } catch (error) {\n    //aprovecho el error de no detectar las variables let respuesta y let comprobarBtn para dar un mensaje y eliminar el error con catch.\n    console.log('You passed the game!'); // console.warn(error);\n  }\n};\n\nnuevoNivel(); //local storage\n\nwindow.onload = function () {\n  if (localStorage.getItem('Nivel')) {\n    nivelNum = JSON.parse(localStorage.getItem('Nivel'));\n    aciertosAcc = JSON.parse(localStorage.getItem('Aciertos'));\n    nuevoNivel();\n  }\n\n  ;\n}; //FALTA:\n//Opcion de mostrar niveles en orden aleatorio\n//Números aleatorios entre coleccionNiveles.length\n\n/*\r\n\r\n  //RANDOM MODE\r\n      randomMode = 'on';\r\n    console.log(nivel.nivel);        \r\n      if(randomMode === 'on'){\r\n        let numeros = nivel.nivel;\r\n        numeros.sort(()=>{return Math.random() - 0.5});\r\n        console.log(numeros);\r\n    };\r\n    */\n//Guardar en BBDD la cantidad de usuarios entrados en la pag.\n//Guardar en BBDD la cantidad/% de errores y aciertos, y en qué niveles.\n\n//# sourceURL=webpack:///./app.js?");

/***/ }),

/***/ "./modulos/coleccionNiveles.js":
/*!*************************************!*\
  !*** ./modulos/coleccionNiveles.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"coleccionNiveles\": () => (/* binding */ coleccionNiveles)\n/* harmony export */ });\nvar coleccionNiveles = [{\n  nivel: 1,\n  titulo: 'Calentamiento nº1: Array 🐱',\n  descripcion: 'Vamos a empezar calentando con los conceptos más básicos. Empecemos por añadir valores a éste array:',\n  problema: \"let mascotas = ['perro'];\",\n  planteamiento: 'Añade, al principio del array, el nuevo \"gato\" que voy a adoptar para hacer compañia a mi perro.',\n  respuesta: {\n    a: \"mascotas.unshift('gato');\",\n    b: \"mascotas.unshift( 'gato' );\",\n    c: 'mascotas.unshift(\"gato\");',\n    d: 'mascotas.unshift( \"gato\" );',\n    e: \"mascotas.unshift('gato')\",\n    f: \"mascotas.unshift( 'gato' )\",\n    g: 'mascotas.unshift(\"gato\")',\n    h: 'mascotas.unshift( \"gato\" )'\n  },\n  solucion: \"let mascotas = ['gato', 'perro'];\",\n  comprobacion: \"mascotas[0].includes('gato')\"\n}, {\n  nivel: 2,\n  titulo: 'Calentamiento nº2: Array 🐭',\n  descripcion: 'Continuamos calentando. Ahora me ha entrado un ratón en casa... ¡está entre mis mascotas!',\n  problema: \"let mascotas = ['gato', 'raton', 'perro'];\",\n  planteamiento: 'Modifica el array eliminando el \"raton\" de entre mis queridas mascotas.',\n  respuesta: {\n    a: \"mascotas.splice(1, 1);\",\n    b: \"mascotas.splice(1,1);\",\n    c: \"mascotas.splice( 1, 1 );\",\n    d: \"mascotas.splice(1, 1)\",\n    e: \"mascotas.splice(1,1)\",\n    f: 'mascotas.splice( 1, 1 )'\n  },\n  solucion: \"let mascotas = ['gato', 'perro'];\"\n}, {\n  nivel: 3,\n  titulo: 'Calentamiento nº3: Array 🐶',\n  descripcion: 'He decidido presentarme voluntaria y pasear a todos éstos perros. Ayudame a contarlos rápidamente para poder apuntarlo en el registro de la perrera.',\n  problema: \"let perros = ['Luby', 'Luna', 'Toby', 'Leo', 'Coco', 'Harry', 'Nelson', 'July', 'Gabe', 'Darleen']; <br>let cantidad = <em>null</em>;\",\n  planteamiento: '¿Cuál és el número exacto de perros que tengo que pasear hoy? Asigna el valor resultante a la variable <code>cantidad</code>.',\n  respuesta: {\n    a: \"cantidad = perros.length;\",\n    b: \"cantidad=perros.length;\",\n    c: \"cantidad= perros.length;\",\n    d: \"cantidad =perros.length;\",\n    e: \"cantidad = perros.length\",\n    f: \"cantidad=perros.length\",\n    g: \"cantidad= perros.length\",\n    h: \"cantidad =perros.length\"\n  },\n  solucion: \"let cantidad = 10;\"\n}, {\n  nivel: 4,\n  titulo: 'Nivel 1: Básico ☕',\n  descripcion: 'Creo que me faltaba aceite en casa...',\n  problema: \"let cintaCaj = ['patatas buenas', 'huevos'];\",\n  planteamiento: '¿Cómo añado \"aceite\" al final de la cinta del cajero antes de que acabe de escánear toda la compra?',\n  respuesta: {\n    a: \"cintaCaj.push('aceite');\",\n    b: 'cintaCaj.push(\"aceite\");',\n    c: \"cintaCaj.push('aceite')\",\n    d: 'cintaCaj.push(\"aceite\")',\n    e: \"cintaCaj.push(' aceite ');\",\n    f: 'cintaCaj.push(\" aceite \");',\n    g: \"cintaCaj.push(' aceite ')\",\n    h: 'cintaCaj.push(\" aceite \")',\n    i: '',\n    j: ''\n  },\n  solucion: \"cintaCaj = ['patatas buenas', 'huevos', 'aceite'];\"\n}, {\n  nivel: 5,\n  titulo: 'Nivel 2: Básico 🥚',\n  descripcion: 'Ya tengo todo preparado para empezar la tortilla, pero me he dado cuenta de que hay patatas en mal estado',\n  problema: \"let productos = ['patatas pochas', 'patatas buenas', 'huevos', 'aceite'];\",\n  planteamiento: '¿Cómo elimino las patatas pochas principio del array?',\n  respuesta: {\n    a: \"productos.shift();\",\n    b: 'productos.shift()',\n    c: \"\",\n    d: '',\n    e: \"\",\n    f: \"\",\n    g: '',\n    h: \"\",\n    i: '',\n    j: \"\"\n  },\n  solucion: \"productos = ['patatas buenas', 'huevos', 'aceite'];\"\n}, {\n  //duda/problema: no entender bien el enunciado ni el uso de solo 1 parametro para el método slice\n  nivel: 6,\n  titulo: 'Nivel 3: Básico 🍅🧀',\n  descripcion: 'Voy a acompañar la tortilla con macarrones. En el armario tengo tres ingredientes, pero solo quiero tomate y queso.',\n  problema: \"let ingredientes = ['pasas', 'tomate', 'queso'];\",\n  planteamiento: '¿Cómo parto o descarto éste primer ingrediente dejando los otros dos restantes?',\n  respuesta: {\n    a: \"ingredientes.slice(1);\",\n    b: 'ingredientes.slice(1)',\n    c: \"ingredientes.slice( 1 );\",\n    d: 'ingredientes.slice( 1 )',\n    e: \"ingredientes.slice(1 );\",\n    f: \"ingredientes.slice(1 )\",\n    g: 'ingredientes.slice( 1);',\n    h: \"ingredientes.slice( 1)\",\n    i: '',\n    j: \"\"\n  },\n  solucion: \"ingredientes = ['tomate', 'queso'];\"\n}, {\n  nivel: 7,\n  titulo: 'Nivel 4: Básico 💁',\n  descripcion: 'Hoy he ido a mi local de confianza y he visto que hay varias personas esperando.',\n  problema: \"let cola = ['Ana', 'Juan', 'Carlos', 'Marimar', 'Silvia'];\",\n  planteamiento: '¿Cuál es el último índice en la posición de la cola del establecimiento? (La última sé que se llama Silvia)',\n  respuesta: {\n    a: \"cola.lastIndexOf('Silvia');\",\n    b: 'cola.lastIndexOf(\"Silvia\");',\n    c: \"cola.lastIndexOf('Silvia')\",\n    d: 'cola.lastIndexOf(\"Silvia\")',\n    e: \"cola.lastIndexOf(' Silvia ');\",\n    f: 'cola.lastIndexOf(\" Silvia \");',\n    g: \"cola.lastIndexOf(' Silvia ')\",\n    h: 'cola.lastIndexOf(\" Silvia \")',\n    i: '',\n    j: \"\"\n  },\n  solucion: \"cola = 4; (interpretando que la posicion 0 es la primera)\"\n}, {\n  nivel: 8,\n  titulo: 'Nivel 5: Básico 👀',\n  descripcion: 'Me parece haber visto a una amiga mía delante. Creo que es Ana.',\n  problema: \"let posicion = ['Ana', 'Juan', 'Carlos', 'Marimar', 'Silvia', 'yo'];\",\n  planteamiento: '¿Cuál es el índice de Ana en el array?',\n  respuesta: {\n    a: \"posicion.indexOf('Ana');\",\n    b: 'posicion.indexOf(\"Ana\");',\n    c: \"posicion.indexOf('Ana')\",\n    d: 'posicion.indexOf(\"Ana\")',\n    e: \"posicion.indexOf(' Ana ');\",\n    f: 'posicion.indexOf(\" Ana \");',\n    g: \"posicion.indexOf(' Ana ')\",\n    h: 'posicion.indexOf(\" Ana \")',\n    i: '',\n    j: \"\"\n  },\n  solucion: \"posicion = 0; (interpretando que la posición 0 es la primera)\"\n}, {\n  nivel: 9,\n  titulo: 'Nivel 6: Básico 🔀',\n  descripcion: 'La cola la estaban haciendo al reves y ahora las posiciones de las personas se revertirán.',\n  problema: \"let colaReves = ['Ana', 'Juan', 'Carlos', 'Marimar', 'Silvia', 'yo'];\",\n  planteamiento: '¿Como lo haríamos?',\n  respuesta: {\n    a: \"colaReves.reverse();\",\n    b: 'colaReves.reverse()',\n    c: \"\",\n    d: '',\n    e: \"\",\n    f: \"\",\n    g: '',\n    h: \"\",\n    i: '',\n    j: \"\"\n  },\n  solucion: \"colaReves = ['yo', 'Silvia', 'Marimar', 'Carlos', 'Juan', 'Ana'];\"\n}, {\n  nivel: 10,\n  titulo: 'Nivel 7: Básico 🎨',\n  descripcion: 'Llego a casa y continuo con el CSS. He escogido los colores para el backoground de mi página web pero el verde pistacho no me convence.',\n  problema: \"let paleta = ['rojo', 'negro', 'verde pistacho'];\",\n  planteamiento: '¿Cómo puedo quitar éste último color del array?',\n  respuesta: {\n    a: \"paleta.pop();\",\n    b: 'paleta.pop()',\n    c: \"\",\n    d: '',\n    e: \"\",\n    f: \"\",\n    g: '',\n    h: \"\",\n    i: '',\n    j: \"\"\n  },\n  solucion: \"paleta = ['rojo', 'negro'];\"\n}, {\n  nivel: 11,\n  titulo: 'Nivel 1: Junior Front-End 🤞',\n  descripcion: 'Invertir cadena',\n  problema: \"let cadena = 'pato donald'; <br>let invertida = <em>undefined</em>;\",\n  planteamiento: 'Invierte los caracteres de la variable cadena, y asigalos a la variable <code>invertida</code>.',\n  respuesta: {\n    a: \"invertida = cadena.split('').reverse().join('');\",\n    b: 'invertida = cadena.split(\"\").reverse().join(\"\");',\n    c: \"invertida=cadena.split('').reverse().join('');\",\n    d: 'invertida=cadena.split(\"\").reverse().join(\"\");',\n    e: \"invertida = cadena.split('').reverse().join('')\",\n    f: 'invertida = cadena.split(\"\").reverse().join(\"\")',\n    g: \"invertida=cadena.split('').reverse().join('')\",\n    h: 'invertida=cadena.split(\"\").reverse().join(\"\")'\n  },\n  solucion: \"let invertida = 'dlanod otap'\"\n}, {\n  nivel: 12,\n  titulo: 'Nivel 2: Junior Front-End 🔢',\n  descripcion: 'He recibido ésta colección de datos:',\n  problema: \"let datos = [4, 10, 5, 696, 32, 369, 1000, 12, 5, 1, 2, 4, 21, 22]; <br>let ordenar = <em>undefined</em>;\",\n  planteamiento: 'Ordena de forma ascendente éstos datos y asigna el resultado a la variable <code>ordenar</code>.',\n  respuesta: {\n    a: \"ordenar = datos.sort((a, b) => a - b);\",\n    b: 'ordenar = datos.sort((a, b) => a-b);',\n    c: \"ordenar = datos.sort((a, b)=> a - b);\",\n    d: 'ordenar = datos.sort((a, b)=> a-b);',\n    e: \"ordenar = datos.sort((a, b)=>a-b);\",\n    f: \"ordenar = datos.sort((a, b) => a - b)\",\n    g: 'ordenar = datos.sort((a, b) => a-b)',\n    h: \"ordenar = datos.sort((a, b)=> a - b)\",\n    i: 'ordenar = datos.sort((a, b)=> a-b)',\n    j: \"ordenar = datos.sort((a, b)=>a-b)\"\n  },\n  solucion: \"let ordenar = [1, 2, 4, 4, 5, 5, 10, 12, 21, 22, 32, 369, 696, 1000];\"\n}, {\n  nivel: 13,\n  titulo: 'Nivel 3: Junior Front-End 🕵️‍♀️',\n  descripcion: 'Quiero saber el número total, de todas las \"s\" que hay en éste trabalenguas:',\n  problema: \"let trabalenguas = 'Si tu gusto gustara del gusto que gusta mi gusto, mi gusto gustaría del gusto que gusta tu gusto'; <br>let repet = <em>null</em>;\",\n  planteamiento: '¿Cuál es el número de veces que se repite la letra \"s\" en el trabalenguas?. Asignalo el resultado a la variable <code>repet</code>.',\n  respuesta: {\n    a: \"repet = trabalenguas.match(/s/gi).length;\",\n    b: 'repet=trabalenguas.match(/s/gi).length;',\n    c: 'repet= trabalenguas.match(/s/gi).length;',\n    d: 'repet =trabalenguas.match(/s/gi).length;',\n    e: \"repet = trabalenguas.match(/s/gi).length\",\n    f: 'repet=trabalenguas.match(/s/gi).length',\n    g: 'repet= trabalenguas.match(/s/gi).length',\n    h: 'repet =trabalenguas.match(/s/gi).length'\n  },\n  solucion: \"let repet = '11';\"\n}, {\n  nivel: 14,\n  titulo: 'Nivel 4: Junior Front-End 🧮',\n  descripcion: '',\n  problema: \"let cadena = 'El número pi 3,14 es muy largo. 3,141592653589793 y más. En binario es 11,001001 y más.'; <br>let cantidad = <em>null</em>;\",\n  planteamiento: '¿Cuál es la cantidad de números que contiene esta cadena?. Asigna el valor a la variable <code>cantidad</code>.',\n  respuesta: {\n    a: \"cantidad = cadena.match(/[0-9]/g).length;\",\n    b: 'cantidad=cadena.match(/[0-9]/g).length;',\n    c: \"cantidad =cadena.match(/[0-9]/g).length;\",\n    d: 'cantidad= cadena.match(/[0-9]/g).length;',\n    e: \"cantidad = cadena.match(/[0-9]/g).length\",\n    f: \"cantidad=cadena.match(/[0-9]/g).length\",\n    g: 'cantidad =cadena.match(/[0-9]/g).length',\n    h: \"cantidad= cadena.match(/[0-9]/g).length\"\n  },\n  solucion: \"let cantidad = 27;\"\n}, {\n  nivel: 'Final',\n  titulo: 'Finished!🎉',\n  descripcion: \"Congratulations, you've finished the JS Methods Game.\",\n  problema: \"😁let JsMethodsGame = true;😁\",\n  planteamiento: 'See more of me, here: <code><a href=\"https://github.com/Alvaro624la\" target=\"_blank\">https://github.com/Alvaro624la</a></code>',\n  respuesta: {\n    a: \"\",\n    b: '',\n    c: \"\",\n    d: '',\n    e: \"\",\n    f: \"\",\n    g: '',\n    h: \"\",\n    i: '',\n    j: \"\"\n  },\n  solucion: \"\"\n}]; //IDEAS NUEVOS NIVELES\n//-------NOSE-------\n// a = ['coche', 'moto'];\n// console.log(a.concat('bici'));\n//resultado: a = ;\n//-------NOSE-------\n//let b = ['Álvaro', 'Prado'];\n// console.log(b.join(' de '));\n//resultado: b = ;\n//-------NOSE-------\n// let g = ['1', '2', '3'];\n// console.log(g.sort());\n//resultado: \n//NIVEL x\n// let sobrino = 'Alejandro Daniel Ramirez';\n// let palabras = null;\n// //contar palabras caracteres string javascript:\n// // Quitar los espacios en blanco y pasar el string a minúsculas(si es necesario)\n// // Recorrer la cadena de texto en vez de pasarlo a un array.\n// // Finalmente guardar el resultado en un object, donde la letra es la key y su total.\n// console.log(palabras);\n//     {\n//         nivel: 333, \n//         titulo: 'Nivel 4: Junior Front-End #️⃣', \n//         descripcion: 'Teniendo esta frase:', problema: \"let frase = ' Bueno,  parece   algo   ,  facil'; <br>let palabras = <em>undefined</em>;\", \n//         planteamiento: '¿Cuál es la cantidad de palabras contiene esta frase?. Asigna el valor a la variable <code>palabras</code>.', \n//         respuesta: {\n//             a: \"\",\n//             b: '',\n//             c: \"\",\n//             d: '',\n//             e: \"\",\n//             f: \"\",\n//             g: '',\n//             h: \"\",\n//             i: '',\n//             j: \"\"\n//         },\n//         solucion: \"\"\n//     },    \n//     {\n//         nivel: 222, \n//         titulo: 'Nivel 7: Junior Front-End', \n//         descripcion: 'Distancia de Hamming', \n//         problema: \"\", \n//         planteamiento: '', \n//         respuesta: {\n//             a: \"\",\n//             b: '',\n//             c: \"\",\n//             d: '',\n//             e: \"\",\n//             f: \"\",\n//             g: '',\n//             h: \"\",\n//             i: '',\n//             j: \"\"\n//         },\n//         solucion: \"\"\n//     },    \n//     {\n//         nivel: 666, \n//         titulo: '', \n//         descripcion: 'Hoy tengo comida familiar. Quiero poner el nombre de los invitados en las sillas, pero tengo poco espacio para escribir a mi sobrino', \n//         problema: \"let sobrino = 'Alejandro Daniel Ramirez'\", \n//         planteamiento: '¿Cuántas palabras/carácteres contiene exactamente el nombre de \"Alejandro\"? Asigna el valor resultante a la variable \"palabras\"', \n//         respuesta: {\n//             a: \"\",\n//             b: '',\n//             c: \"\",\n//             d: '',\n//             e: \"\",\n//             f: \"\",\n//             g: '',\n//             h: \"\",\n//             i: '',\n//             j: \"\"\n//         },\n//         solucion: \"\"\n//     }\n\n/*\r\n\r\nMétodos:\r\n    Utilizados:\r\n        unshift\r\n        splice\r\n        length\r\n        push\r\n        shift\r\n        slice\r\n        lastIndexOf\r\n        indexOf\r\n        reverse\r\n        pop\r\n        split\r\n        sort\r\n        match\r\n\r\n    Añadir:\r\n        map\r\n        filter\r\n        find\r\n        findIndexOf\r\n        fill\r\n        some\r\n        every\r\n        from\r\n        includes\r\n        search\r\n\r\n\r\n*/\n\n//# sourceURL=webpack:///./modulos/coleccionNiveles.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./app.js");
/******/ 	
/******/ })()
;